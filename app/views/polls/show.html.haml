%div{role: 'polls-show'}
  %article
    :markdown
      #{ @poll.prompt }

  - if @poll.is_over? or @results
    
    - if @poll.votes.any?
      %ul.results
        - @poll.options.by_position.each do |option|
          %li{class: ( (@poll.winning_option == option) ? 'winner' : nil )}
            %div.graph
              %label <strong>#{ option.text }</strong> #{ t(:votes, count: option.votes.size) }
              %div{style: "width: #{ (option.votes.size * 100) / (@poll.votes.size) }%;"}
                %label <strong>#{ option.text }</strong> #{ t(:votes, count: option.votes.size) }
    
    - else
      
      %p.no-votes= @poll.is_over? ? t('no_votes_were_cast') : t('no_votes_have_been_cast')

    %em.deadline
      #{ t(:votes, count: @poll.votes.size) } #{ t('poll_cast') } &bull;
      
      - if @poll.is_over?
        #{ t('poll_closed') } <strong>#{ t(:hours, count: @poll.ends_in_hours) } ago</strong>
      - else
        #{ t('poll_closes_in') } <strong>#{ t(:hours, count: @poll.ends_in_hours) }</strong>

  - else

    :coffeescript
      $(document).on 'ready page:load', ->
        $("[data-action='selector'] li").bind 'click', (e) ->
          $("[name='vote[option_id]']").val $(e.currentTarget).data('option')
          $(e.currentTarget).closest('form').submit()

    = form_for [@poll, @vote] do |f|
      = f.hidden_field :option_id
  
      %ul{'data-action' => 'selector'}
        - @poll.options.by_position.each do |option|
          %li{'data-option' => option.id}
            %label
              %strong
                - if @vote.option == option
                  %abbr{title: 'selected'} âˆš 
                #{ option.text }
    
    %em.deadline #{ t(:votes, count: @poll.votes.size) } #{ t('poll_cast') } &bull; #{ t('poll_closes_in') } <strong>#{ t(:hours, count: @poll.ends_in_hours) }</strong>
