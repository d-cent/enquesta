:coffeescript
  append_option = (ol) ->
    i = ol.children().length
    ol.append( '<li><input id="poll_options_attributes_' + i + '_text" name="poll[options_attributes][' + i + '][text]" type="text"><input id="poll_options_attributes_' + i + '_position" name="poll[options_attributes][' + i + '][position]" type="hidden" value="' + i + '"></li>' )
  
  reindex_options = (ol) ->
    for li in ol.children()
      i = ol.children().index(li)
      $('input[type="text"]:first', li).attr('id', 'poll_options_attributes_' + i + '_text')
      $('input[type="text"]:first', li).attr('name', 'poll[options_attributes][' + i + '][text]')
      $('input[type="hidden"]:first', li).attr('id', 'poll_options_attributes_' + i + '_position')
      $('input[type="hidden"]:first', li).attr('name', 'poll[options_attributes][' + i + '][position]')
      $('input[type="hidden"]:first', li).val(i)
  
  clean_up = (ol) ->
    options = []
    for li in ol.children()
      option = $('input', li).val()
      if ((option.length < 1) and !$(li).is(':last-child')) or ((option.length > 0) and (option in options))
        li.remove()
      else if (option.length > 0)
        options.push option
  
  $(document).on 'ready page:load', ->
    $('.options ol').on 'blur', 'li input', (e) ->
      clean_up $(e.currentTarget).parents('ol:first')
      reindex_options $(e.currentTarget).parents('ol:first')
      
    $('.options ol').on 'keyup', 'li:last input', (e) ->
      if $(e.currentTarget).val().length > 0
        append_option $(e.currentTarget).parents('ol:first')

%div{role: 'polls-new'}
  = form_for @poll do |f|
    %ol.fields
      %li.prompt
        = f.label :prompt, t('poll_prompt')
        = f.text_area :prompt, placeholder: "(#{ t('poll_prompt_placeholder') })"
      
      %li.options
        = f.label :options, t('poll_options')
        %ol
          = f.fields_for :options do |of|
            %li
              = of.text_field :text
              = of.hidden_field :position, value: of.options[:child_index]
  
      %li.ends_at
        = f.label :ends_in_hours, t('poll_ends_in')
        = f.text_field :ends_in_hours
        %label.addendum= t(:poll_hours)
  
    %ul.actions
      %li= f.submit "#{ t('poll_create') }"